{"version":3,"file":"utils-3a97c414.js","sources":["../lib/utils.ts"],"sourcesContent":["import type { FormRules } from 'element-plus'\r\nimport type { option, formOption, rule } from './type.d'\r\n\r\n/**\r\n * @description: 生成表单控件使用的option\r\n * @param arr 原始list\r\n * @param label 赋值label的key名\r\n * @param value 赋值value的key名\r\n * @param custom 自定义需要合并的对象\r\n */\r\nexport const getOption = (arr: Record<string, string>[] | string[], label: string, value: string, custom?: {}): option[] => {\r\n  if (!Array.isArray(arr)) return []\r\n  const options: option[] = []\r\n  let customKeys: string[] = []\r\n  if (custom) customKeys = Object.keys(custom)\r\n  arr.forEach((item) => {\r\n    let params: option & Record<string, string> = {\r\n      label: typeof item === 'string' ? item : item[label],\r\n      value: typeof item === 'string' ? item : item[value]\r\n    }\r\n    if (custom) {\r\n      customKeys.forEach((key) => {\r\n        params[key] = (item as Record<string, string>)[key]\r\n      })\r\n    }\r\n    options.push(params)\r\n  })\r\n  return options\r\n}\r\n\r\n/**\r\n * @description: 获取表单配置中指定的对象\r\n * @param formOption 表单配置\r\n * @param key 指定的key\r\n */\r\nexport const getLabel = (formOption: formOption[], key: string): formOption => {\r\n  return formOption.filter(i => (i.formItem.prop) === key)[0] || {\r\n    type: 'input',\r\n    formItem: {\r\n      prop: '',\r\n      label: '',\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @description: 校验\r\n * @param rule rule对象\r\n * @param value 对应prop的值\r\n */\r\nconst getValidator = (\r\n  rule: rule,\r\n  propVal: string,\r\n  callback: Function\r\n) => {\r\n  const type = {\r\n    'input': '输入',\r\n    'input-number': '输入',\r\n    'select': '选择',\r\n    'tree-select': '选择',\r\n    'cascader': '选择',\r\n    'radio': '选择',\r\n    'radio-button': '选择',\r\n    'checkbox': '选择',\r\n    'checkbox-button': '选择',\r\n    'datetime': '选择',\r\n    'time': '选择',\r\n    'switch': '选择',\r\n    'upload': '上传',\r\n  }\r\n  const params = getLabel(rule.formOption, rule.field)\r\n  if (Array.isArray(propVal) && propVal.length === 0) return Promise.reject(`请${(type[params.type] || '完善')}${params.formItem.label}`)\r\n  if (!propVal) return Promise.reject(`请${(type[params.type] || '完善')}${params.formItem.label}`)\r\n  if (!params?.formItem?.rules) return Promise.resolve();\r\n  if (typeof params.formItem.rules.validator === 'function') {\r\n    params.formItem.rules.validator(rule, propVal).then(() => {\r\n      return callback()\r\n    }).catch((res: string) => {\r\n      return callback(new Error(res !== 'err' ? res : (params?.formItem.rules?.message ?? '')))\r\n    })\r\n  } else {\r\n    if (!(params.formItem.rules.validator as RegExp).test(propVal)) {\r\n      return Promise.reject(params.formItem.rules.message || '格式有误')\r\n    } else {\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @description: 生成校验配置\r\n * @param formOption 表单配置\r\n * @param omit 不需要验证的key\r\n */\r\nexport const getRules = (formOption: formOption[], omit: string[] = []): FormRules => {\r\n  let rules: FormRules = {}\r\n  formOption.forEach((i) => {\r\n    const prop: string = (typeof i === 'string' ? i : (i.formItem.prop))!;\r\n    if (!omit.includes(prop)) rules[prop] = [{ required: true, validator: getValidator, trigger: i.formItem?.rules?.trigger ?? 'blur', formOption }]\r\n  })\r\n  return rules\r\n}\r\n\r\nexport const CommonValidator = {\r\n  checkIphoneNum: (\r\n    rule: rule,\r\n    value: string | boolean,\r\n  ): Promise<void> => {\r\n    if (!value) return Promise.reject('请输入手机号')\r\n    if (!/(0|86|17951)?(13[0-9]|15[012356789]|166|17[3678]|18[0-9]|14[57])[0-9]{8}$/.test(value as string)) {\r\n      return Promise.reject('手机格式有误')\r\n    }\r\n    return Promise.resolve()\r\n  }\r\n}"],"names":["getOption","arr","label","value","custom","options","customKeys","item","params","key","getLabel","formOption","i","getValidator","rule","propVal","callback","_a","type","res","getRules","omit","rules","_b","prop","CommonValidator"],"mappings":"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"}